//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flyga.AdditionalAchievements.Resources.Status {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Provider {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Provider() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Flyga.AdditionalAchievements.Resources.Status.Provider", typeof(Provider).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partially suspended..
        /// </summary>
        internal static string ActionHandlerInhibited {
            get {
                return ResourceManager.GetString("ActionHandlerInhibited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently suspended. May become available later..
        /// </summary>
        internal static string ActionHandlerPaused {
            get {
                return ResourceManager.GetString("ActionHandlerPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No pack uses the API at the moment..
        /// </summary>
        internal static string ApiNoPermissionsRequested {
            get {
                return ResourceManager.GetString("ApiNoPermissionsRequested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No API-Key was added, the module is missing all permissions, or Blish HUD is unable to connect to the API..
        /// </summary>
        internal static string ApiPermissionsMissingAll {
            get {
                return ResourceManager.GetString("ApiPermissionsMissingAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API-Key or module is missing some permissions..
        /// </summary>
        internal static string ApiPermissionsMissingSome {
            get {
                return ResourceManager.GetString("ApiPermissionsMissingSome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All requested permissions are allowed..
        /// </summary>
        internal static string ApiPermissionsOk {
            get {
                return ResourceManager.GetString("ApiPermissionsOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough recent requests to determine API status..
        /// </summary>
        internal static string ApiRequestsNotEnoughData {
            get {
                return ResourceManager.GetString("ApiRequestsNotEnoughData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API is reliable..
        /// </summary>
        internal static string ApiRequestsOk {
            get {
                return ResourceManager.GetString("ApiRequestsOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your network is currently being rate limited by the API..
        /// </summary>
        internal static string ApiRequestsRateLimited {
            get {
                return ResourceManager.GetString("ApiRequestsRateLimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API is currently dropping some requests..
        /// </summary>
        internal static string ApiRequestsUnreliable {
            get {
                return ResourceManager.GetString("ApiRequestsUnreliable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implementation missing. Contact module author..
        /// </summary>
        internal static string GeneralImplementationMissing {
            get {
                return ResourceManager.GetString("GeneralImplementationMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal: Missing Context..
        /// </summary>
        internal static string GeneralMissingContext {
            get {
                return ResourceManager.GetString("GeneralMissingContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working as intended..
        /// </summary>
        internal static string GeneralNormal {
            get {
                return ResourceManager.GetString("GeneralNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal: Stopped..
        /// </summary>
        internal static string GeneralStopped {
            get {
                return ResourceManager.GetString("GeneralStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No information available..
        /// </summary>
        internal static string GeneralUnknown {
            get {
                return ResourceManager.GetString("GeneralUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module is installed, but currently disabled..
        /// </summary>
        internal static string ModuleDependencyDisabled {
            get {
                return ResourceManager.GetString("ModuleDependencyDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module is currently not installed, or could not be found..
        /// </summary>
        internal static string ModuleDependencyMissing {
            get {
                return ResourceManager.GetString("ModuleDependencyMissing", resourceCulture);
            }
        }
    }
}
